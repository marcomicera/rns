<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <!-- Global element declaration -->
    <xsd:element name="rnsInfo" type="RnsType">
        <!-- Place ID key: "both places and vehicles are uniquely identified in the system by means of a
                            unique identifier (there cannot be two Identified entities with the same id) -->
        <xsd:unique name="identifiedEntityKey">
            <xsd:selector
                    xpath="places/gates/gate|places/parkingAreas/parkingArea|places/roadSegments/roadSegment|vehicles/vehicle"/>
            <xsd:field xpath="@id"/>
        </xsd:unique>
        <xsd:key name="placeKey">
            <xsd:selector xpath="places/gates/gate|places/parkingAreas/parkingArea|places/roadSegments/roadSegment"/>
            <xsd:field xpath="@id"/>
        </xsd:key>

        <!-- Road ID uniqueness: "The road name uniquely identifies a road in the system,
                                  i.e. there cannot be two roads with the same name".

                                  Since there is no 'roads' element, there is no need
                                  to check for their uniqueness. -->
        <!--<xsd:unique name="uniqueRoadName">
            <xsd:selector
                    xpath="places/roadSegments/roadSegment"/>
            <xsd:field xpath="@road"/>
        </xsd:unique>-->

        <!-- 'NextPlace' name references -->
        <xsd:keyref name="nextPlaceRef" refer="placeKey">
            <xsd:selector
                    xpath="places/gates/gate/nextPlace|places/parkingAreas/parkingArea/nextPlace|places/roadSegments/roadSegment/nextPlace"/>
            <xsd:field xpath="@name"/>
        </xsd:keyref>

        <!-- Connection places references -->
        <xsd:keyref name="connectionFromPlaceRef" refer="placeKey">
            <xsd:selector xpath="connections/connection"/>
            <xsd:field xpath="@from"/>
        </xsd:keyref>
        <xsd:keyref name="connectionToPlaceRef" refer="placeKey">
            <xsd:selector xpath="connections/connection"/>
            <xsd:field xpath="@to"/>
        </xsd:keyref>

        <!-- Vehicle origin, position and destination references:
                "At any time, each vehicle is in one place,
                while each place can contain several vehicles." -->
        <xsd:keyref name="vehicleOriginPlaceRef" refer="placeKey">
            <xsd:selector xpath="vehicles/vehicle"/>
            <xsd:field xpath="@origin"/>
        </xsd:keyref>
        <xsd:keyref name="vehiclePositionPlaceRef" refer="placeKey">
            <xsd:selector xpath="vehicles/vehicle"/>
            <xsd:field xpath="@position"/>
        </xsd:keyref>
        <xsd:keyref name="vehicleDestinationPlaceRef" refer="placeKey">
            <xsd:selector xpath="vehicles/vehicle"/>
            <xsd:field xpath="@destination"/>
        </xsd:keyref>
    </xsd:element>

    <!-- Root interface -->
    <xsd:complexType name="IdentifiedEntity">
        <xsd:attribute name="id" type="xsd:token" use="required"/>
    </xsd:complexType>

    <!-- Root type definition -->
    <xsd:complexType name="RnsType">
        <!-- "The road system is represented by a number of connected places that can have vehicles inside" -->
        <xsd:all>
            <xsd:element name="places" minOccurs="0" type="PlacesType"/>
            <xsd:element name="connections" minOccurs="0" type="ConnectionsType"/>
            <!--<xsd:element name="roads" minOccurs="0" type="RoadsType"/>-->
            <xsd:element name="vehicles" minOccurs="0" type="VehiclesType"/>
        </xsd:all>
    </xsd:complexType>

    <!-- Places -->
    <xsd:complexType name="PlaceType">
        <xsd:complexContent>
            <xsd:extension base="IdentifiedEntity">
                <xsd:sequence>
                    <xsd:element name="nextPlace" minOccurs="0" maxOccurs="unbounded" type="NextPlaceType"/>
                </xsd:sequence>
                <xsd:attribute name="capacity" type="xsd:unsignedShort" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="NextPlaceType">
        <xsd:attribute name="name" type="xsd:token" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="PlacesType">
        <!-- "A place can be a road segment, a parking area or a gate" -->
        <xsd:all>
            <xsd:element name="gates" minOccurs="0" type="GatesType"/>
            <xsd:element name="parkingAreas" minOccurs="0" type="ParkingAreasType"/>
            <xsd:element name="roadSegments" minOccurs="0" type="RoadSegmentsType">
                <!-- Road segment's name uniqueness within the same road:
                        "a road segment name is unique within a road,
                        i.e. a road cannot have two segments with the same name" -->
                <xsd:unique name="uniqueRoadSegmentInRoad">
                    <xsd:selector xpath="roadSegment"/>
                    <xsd:field xpath="@name"/>
                    <xsd:field xpath="@road"/>
                </xsd:unique>
            </xsd:element>
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="GatesType">
        <xsd:sequence>
            <xsd:element name="gate" maxOccurs="unbounded" type="GateType"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GateType">
        <!-- "Through gates vehicles can enter into or exit from the system.
              The type of a gate specifies if the gate is for entering only (IN),
              for exiting only (OUT) or for both (INOUT)." -->
        <xsd:complexContent>
            <xsd:extension base="PlaceType">
                <xsd:attribute name="type" use="required" type="GateTypeType"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType name="GateTypeType">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="IN"/>
            <xsd:enumeration value="OUT"/>
            <xsd:enumeration value="INOUT"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="ParkingAreasType">
        <xsd:sequence>
            <xsd:element name="parkingArea" maxOccurs="unbounded" type="ParkingAreaType">
                <!-- Service's name uniqueness within the same parking area
                     "[service] each one characterized only by a name, which uniquely
                     identifies it (there cannot be two services with the same name). -->
                <xsd:unique name="uniqueServiceInParkingArea">
                    <xsd:selector xpath="service"/>
                    <xsd:field xpath="@name"/>
                </xsd:unique>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ParkingAreaType">
        <xsd:complexContent>
            <xsd:extension base="PlaceType">
                <!-- "A parking area can have any number of services" -->
                <xsd:sequence>
                    <xsd:element name="service" minOccurs="0" maxOccurs="unbounded" type="ServiceType"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="ServiceType">
        <xsd:attribute name="name" type="xsd:token" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="RoadSegmentsType">
        <xsd:sequence>
            <xsd:element name="roadSegment" maxOccurs="unbounded" type="RoadSegmentType"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="RoadSegmentType">
        <xsd:complexContent>
            <!-- "Note that a road segment is also an identified entity,
                  so it also has a unique id, in addition to its name" -->
            <xsd:extension base="PlaceType">
                <!-- "A road segment is characterized by a name and belongs to a road,
                      which is also characterized by a name." -->
                <xsd:attribute name="name" type="xsd:token" use="required"/>
                <xsd:attribute name="road" type="xsd:token" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- Connections -->
    <xsd:complexType name="ConnectionsType">
        <xsd:sequence>
            <xsd:element name="connection" maxOccurs="unbounded" type="ConnectionType"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ConnectionType">
        <xsd:attribute name="from" type="xsd:token" use="required"/>
        <xsd:attribute name="to" type="xsd:token" use="required"/>
    </xsd:complexType>

    <!-- Vehicles -->
    <xsd:complexType name="VehiclesType">
        <xsd:sequence>
            <xsd:element name="vehicle" maxOccurs="unbounded" type="VehicleType"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="VehicleType">
        <xsd:complexContent>
            <xsd:extension base="IdentifiedEntity">
                <xsd:all>
                    <!-- ISO 8601 format: https://www.w3.org/TR/xmlschema-2/#isoformats -->
                    <xsd:element name="entryTime" type="xsd:dateTime"/>
                </xsd:all>

                <!-- "A vehicle is characterized by a type, by the time instant
                      when it entered the system and by a state." -->
                <xsd:attribute name="type" type="VehicleTypeType" use="required"/>

                <xsd:attribute name="state" type="VehicleState" use="required"/>

                <!-- "At any time, each vehicle is in one place,
                      while each place can contain several vehicles." -->
                <xsd:attribute name="position" type="xsd:token" use="required"/>
                <xsd:attribute name="origin" type="xsd:token" use="required"/>
                <xsd:attribute name="destination" type="xsd:token" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType name="VehicleTypeType">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="CAR"/>
            <xsd:enumeration value="TRUCK"/>
            <xsd:enumeration value="SHUTTLE"/>
            <xsd:enumeration value="CARAVAN"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="VehicleState">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="PARKED"/>
            <xsd:enumeration value="IN_TRANSIT"/>
        </xsd:restriction>
    </xsd:simpleType>

</xsd:schema>